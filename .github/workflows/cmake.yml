name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: MinSizeRel
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Lua/LuaJIT
      uses: leafo/gh-actions-lua@v8.0.0
      with:
        luaVersion: 5.4
        luaCompileFlags: -fPIC -shared
      
    - name: Install Dependencies
      run: sudo apt-get install libc6-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      
    - name: Checkout Submodules
      run: git submodule update --init --recursive
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DLua_ROOT=.lua/ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target procyon-lua
    
    - name: Archive
      run: mkdir archive && cp *.so ./archive/ && cp lua/procyon-lua ./archive/ && tar -cvJf archive.tar.xz ./archive/*

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: procyon-lua
        path: lua/procyon-lua
