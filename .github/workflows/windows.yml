name: Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  OUTPUT_DIR: ${{github.workspace}}\output
  
jobs:
#   build_64bit:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v2
    
#     - name: Download Lua
#       shell: powershell
#       run: wget https://www.lua.org/ftp/lua-5.4.2.tar.gz -o lua.tar.gz
      
#     - name: Extract Lua
#       shell: powershell
#       run: tar -xf lua.tar.gz
    
#     - name: Build Lua
#       run: mingw32-make.exe -j -C ${{github.workspace}}\lua-5.4.2\ mingw
      
#     - name: Create Output Directory
#       run: mkdir ${{env.OUTPUT_DIR}}
      
#     - name: Checkout Submodules
#       run: git submodule update --init --recursive
      
#     - name: Configure CMake
#       run: cmake -G "MinGW Makefiles" -B ${{github.workspace}}\build -DLua_ROOT='${{github.workspace}}\lua-5.4.2\src' -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{env.OUTPUT_DIR}} -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{env.OUTPUT_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

#     - name: Build
#       run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}} --target procyon-lua
    
#     - name: Upload a Build Artifact
#       uses: actions/upload-artifact@v2.2.4
#       with:
#         name: windows-64bit
#         path: ${{env.OUTPUT_DIR}}

  build:
    runs-on: windows-latest
    strategy:
      matrix:
        msystem: [MINGW32, MINGW64]
        build-type: [Debug, MinSizeRel]
        include:
          - msystem: MINGW32
            arch: i686
          - msystem: MINGW64
            arch: x86_64
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.msystem}}
        install: >-
          make
          pkg-config
          gcc
          git
         
    - name: Install Lua
      run: pacman -S --noconfirm mingw-w64-${{matrix.arch}}-lua
  
    - name: Install CMake
      run: pacman -S --noconfirm mingw-w64-${{matrix.arch}}-cmake
      
    - name: Install GCC
      run: pacman -S --noconfirm mingw-w64-${{matrix.arch}}-gcc
      
    - uses: actions/checkout@v2
    - name: Checkout Submodules
      run: git submodule update --init --recursive
      
    - name: Create Output Directory
      run: mkdir ${{env.OUTPUT_DIR}}
      
    - name: Configure CMake
      run: |
        cmake \
        -B ${{github.workspace}}\build \
        -DCMAKE_C_COMPILER=mingw-64-${{matrix.arch}}-gcc \
        -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{env.OUTPUT_DIR}} \
        -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{env.OUTPUT_DIR}} \
        -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
        
    - name: Build
      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}} --target procyon-lua
      
    - name: Strip
      if: ${{(matrix.build-type != 'Debug')}}
      run: strip --strip-unneeded ${{env.OUTPUT_DIR}}/*
      
    - name: Clean Up
      run: ${{env.OUTPUT_DIR}}/genhexer*
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: windows-${{matrix.arch}}-${{matrix.build-type}}
        path: ${{env.OUTPUT_DIR}}

